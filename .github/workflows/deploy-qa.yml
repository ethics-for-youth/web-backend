name: Deploy to QA Environment

on:
  workflow_dispatch:
  push:
    branches: [qa]
    paths:
      - "terraform/**"
      - "lambda_functions/**"
      - "layers/**"
      - "scripts/**"
      - ".github/workflows/terraform-plan.yml"
      - ".github/workflows/terraform-validate.yml"
      - ".github/workflows/terraform-deploy.yml"
      - ".github/workflows/deploy-qa.yml"

permissions:
  contents: read
  pull-requests: write
  issues: write

env:
  AWS_REGION: ${{ vars.AWS_REGION }}

jobs:
  validate:
    uses: ./.github/workflows/terraform-validate.yml
    with:
      environment: qa
      aws-region: ${{ vars.AWS_REGION }}
    secrets:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      razorpay-key-id: ${{ secrets.RAZORPAY_KEY_ID }}
      razorpay-key-secret: ${{ secrets.RAZORPAY_KEY_SECRET }}
      razorpay-webhook-secret: ${{ secrets.RAZORPAY_WEBHOOK_SECRET }}

  plan:
    uses: ./.github/workflows/terraform-plan.yml
    needs: validate
    with:
      environment: qa
      aws-region: ${{ vars.AWS_REGION }}
    secrets:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      razorpay-key-id: ${{ secrets.RAZORPAY_KEY_ID }}
      razorpay-key-secret: ${{ secrets.RAZORPAY_KEY_SECRET }}
      razorpay-webhook-secret: ${{ secrets.RAZORPAY_WEBHOOK_SECRET }}

  wait-for-approval:
    name: Wait for QA Deployment Approval
    runs-on: ubuntu-latest
    needs: [validate, plan]
    outputs:
      approved: ${{ steps.approval.outputs.approved }}
    steps:
      - name: Wait for approval
        id: approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: mohammadn0man
          minimum-approvals: 1
          exclude-workflow-initiator-as-approver: false

  deploy:
    name: Deploy to QA
    uses: ./.github/workflows/terraform-deploy.yml
    needs: [validate, plan, wait-for-approval]
    with:
      environment: qa
      aws-region: ${{ vars.AWS_REGION }}
      plan-file: ${{ needs.plan.outputs.plan-file }}
    secrets:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
