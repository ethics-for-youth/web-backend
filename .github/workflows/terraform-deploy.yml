name: Terraform Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Environment to deploy to (dev, qa, prod)'
      aws-region:
        required: false
        type: string
        default: ${{ vars.AWS_REGION }}
        description: 'AWS region for deployment'
      plan-file:
        required: false
        type: string
        description: 'Name of the plan file artifact to download and apply'
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.aws-access-key-id }}
        aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
        
    - name: Make build script executable
      run: chmod +x scripts/build.sh
      
    - name: Download plan file
      if: inputs.plan-file != ''
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan-${{ inputs.environment }}
        path: .
      
    - name: Deploy to ${{ inputs.environment }} environment
      run: |
        if [ -f "${{ inputs.plan-file }}" ]; then
          echo "Applying saved plan file: ${{ inputs.plan-file }}"
          ./scripts/build.sh apply ${{ inputs.environment }} ${{ inputs.plan-file }}
        else
          echo "No plan file found, running full deploy"
          ./scripts/build.sh deploy ${{ inputs.environment }}
        fi
      
    - name: Get deployment outputs
      run: |
        cd terraform
        ./workspace.sh show
        terraform output
      id: outputs 