name: Terraform Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Environment to deploy to (dev, qa, prod)'
      aws-region:
        required: false
        type: string
        default: ${{ vars.AWS_REGION }}
        description: 'AWS region for deployment'
      plan-file:
        required: false
        type: string
        description: 'Name of the plan file artifact to download and apply'
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          layers/dependencies/nodejs/package-lock.json
          layers/utility/nodejs/package-lock.json
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.12.2"
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.aws-access-key-id }}
        aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
        
    - name: Make scripts executable
      run: |
        chmod +x scripts/build.sh
        
    # Download plan file and pre-built artifacts from plan step
    # This ensures we use the exact same zip files that were used during planning
    - name: Download plan file and build artifacts
      uses: actions/download-artifact@v4
      with:
        name: terraform-plan-${{ inputs.environment }}
        path: terraform/
      
    - name: Verify plan file and build artifacts exist
      run: |
        echo "=== Checking plan file ==="
        if [ -f "terraform/terraform-plan-${{ inputs.environment }}.tfplan" ]; then
          echo "‚úÖ Plan file found: terraform/terraform-plan-${{ inputs.environment }}.tfplan"
          ls -la terraform/terraform-plan-${{ inputs.environment }}.tfplan
        else
          echo "‚ùå Plan file not found at expected location"
          echo "Contents of terraform directory:"
          ls -la terraform/
        fi
        
        echo -e "\n=== Checking build artifacts ==="
        if [ -d "terraform/builds" ]; then
          echo "‚úÖ Build artifacts found:"
          ls -la terraform/builds/
        else
          echo "‚ùå Build artifacts not found"
          echo "Contents of current directory:"
          ls -la
        fi
        
    - name: Deploy to ${{ inputs.environment }} environment
      run: |
        if [ -f "terraform/terraform-plan-${{ inputs.environment }}.tfplan" ]; then
          echo "‚úÖ Applying saved plan file: terraform-plan-${{ inputs.environment }}.tfplan"
          echo "üîß Using pre-built artifacts from plan step"
          ./scripts/build.sh apply ${{ inputs.environment }} terraform-plan-${{ inputs.environment }}.tfplan
        else
          echo "‚ö†Ô∏è  No plan file found, running apply with var file (will rebuild dependencies)"
          ./scripts/build.sh apply ${{ inputs.environment }}
        fi
      
    - name: Get deployment outputs
      run: |
        cd terraform
        terraform output
      id: outputs 