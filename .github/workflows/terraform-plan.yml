name: Terraform Plan

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Environment to plan for (dev, qa, prod)'
      aws-region:
        required: false
        type: string
        default: ${{ vars.AWS_REGION }}
        description: 'AWS region for planning'
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      razorpay-key-id:
        required: true
      razorpay-key-secret:
        required: true
      razorpay-webhook-secret:
        required: true

jobs:
  plan:
    name: Plan Terraform Changes
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    outputs:
      plan-file: ${{ steps.plan.outputs.plan-file }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          package-lock.json
          layers/dependencies/nodejs/package-lock.json
          layers/utility/nodejs/package-lock.json
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.12.2"
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.aws-access-key-id }}
        aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
        
    - name: Make scripts executable
      run: |
        chmod +x scripts/build.sh
        
    - name: Plan Terraform changes
      id: plan
      run: |
        echo "razorpay_key_id         = \"${{ secrets.razorpay-key-id }}\"" >> terraform/terraform.tfvars
        echo "razorpay_key_secret     = \"${{ secrets.razorpay-key-secret }}\"" >> terraform/terraform.tfvars
        echo "razorpay_webhook_secret = \"${{ secrets.razorpay-webhook-secret }}\"" >> terraform/terraform.tfvars
        ./scripts/build.sh plan ${{ inputs.environment }}
        echo "plan-file=terraform/terraform-plan-${{ inputs.environment }}.tfplan" >> $GITHUB_OUTPUT
      
    # Upload both plan file and build artifacts (zip files) to ensure consistency
    # between plan and apply steps. This prevents hash mismatches when applying.
    - name: Upload plan file and build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan-${{ inputs.environment }}
        path: |
          terraform/terraform-plan-${{ inputs.environment }}.tfplan
          terraform/builds/
        retention-days: 1
