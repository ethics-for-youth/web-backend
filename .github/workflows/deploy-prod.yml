name: Deploy to Production Environment

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - 'lambda_functions/**'
      - 'layers/**'
      - 'scripts/**'
      - '.github/workflows/terraform-deploy.yml'
      - '.github/workflows/deploy-prod.yml'

env:
  AWS_REGION: ${{ vars.AWS_REGION }}

jobs:
  validate:
    uses: ./.github/workflows/terraform-validate.yml
    if: contains(github.event.head_commit.message, '[deploy-prod]')
    with:
      aws-region: ${{ vars.AWS_REGION }}
    secrets:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  plan:
    uses: ./.github/workflows/terraform-plan.yml
    needs: validate
    if: contains(github.event.head_commit.message, '[deploy-prod]')
    with:
      environment: prod
      aws-region: ${{ vars.AWS_REGION }}
    secrets:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  wait-for-approval:
    name: Wait for Production Deployment Approval
    runs-on: ubuntu-latest
    needs: [validate, plan]
    if: contains(github.event.head_commit.message, '[deploy-prod]')
    outputs:
      approved: ${{ steps.approval.outputs.approved }}
    steps:
    - name: Wait for approval
      id: approval
      uses: trstringer/manual-approval@v1
      with:
        secret: ${{ secrets.GITHUB_TOKEN }}
        approvers: mohammadn0man
        minimum-approvals: 1
        exclude-workflow-initiator-as-approver: false

  deploy:
    name: Deploy to Production
    uses: ./.github/workflows/terraform-deploy.yml
    needs: [validate, plan, wait-for-approval]
    if: contains(github.event.head_commit.message, '[deploy-prod]') && needs.wait-for-approval.outputs.approved == 'true'
    with:
      environment: prod
      aws-region: ${{ vars.AWS_REGION }}
      plan-file: ${{ needs.plan.outputs.plan-file }}
    secrets:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 